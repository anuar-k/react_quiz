{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinisheQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinisheQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/ActionTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","form/formFramework.js","components/UI/Select/Select.js","hoc/Auxiliary/Auxiliary.js","store/actions/create.js","containers/QuizCreator/QuizCreator.js","components/Logout/Logout.js","App.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","isAuthenticated","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","React","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","console","log","results","SuccessCount","Object","keys","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizesSuccess","quizes","fetchQuizSuccess","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","error","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","QuizList","renderQuizes","name","fetchQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","authSuccess","autoLogout","time","logout","localStorage","removeItem","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","submitHandler","event","preventDefault","registerHandler","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","createControl","config","validate","validateForm","hasOwnProperty","Select","options","option","Auxiliary","resetQuizCreation","createOptionControl","createFormControl","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","post","Logout","App","autoLogin","routes","path","component","withRouter","getItem","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eec0750e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__fcV3L\",\"close\":\"Drawer_close__fD_MN\",\"active\":\"Drawer_active__3Lsa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__7HEjr\",\"open\":\"MenuToggle_open__1cKpq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1B_4a\",\"QuizWrapper\":\"Quiz_QuizWrapper__1xpKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1njXk\",\"Question\":\"ActiveQuiz_Question__6zTii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__PU9jV\",\"success\":\"AnswerItem_success__lL8FZ\",\"error\":\"AnswerItem_error__3mOLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__3mbKf\",\"success\":\"FinishedQuiz_success__1qhiY\",\"error\":\"FinishedQuiz_error__1OGrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3vT9E\",\"error\":\"Button_error__2d-EW\",\"success\":\"Button_success__2Bd5_\",\"primary\":\"Button_primary__A5a3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2Xwz1\",\"lds-spinner\":\"Loader_lds-spinner__nfIq3\",\"center\":\"Loader_center__3Sfos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__340RX\",\"AuthForm\":\"Auth_AuthForm__KD3PV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__GLSsA\",\"invalid\":\"Input_invalid__2uTLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3kBdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3yvqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__gEsQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__sFNNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3vLu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1A_3D\"};","import React from \"react\";\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        'fa',\r\n        classes.MenuToggle\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\nexport default MenuToggle","import React from \"react\";\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = props => {\r\n    return (\r\n        <div className={classes.Backdrop} onClick={props.onClick}>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Backdrop","import React, {Component, Fragment} from \"react\";\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Drawer extends Component {\r\n\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    renderLinks(links) {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={this.clickHandler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n        const links = [\r\n            {to: '/', label: 'Список', exact: true},\r\n        ]\r\n\r\n        if (!this.props.isAuthenticated) {\r\n            links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n        } else {\r\n            links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n            links.push({to: '/logout', label: 'Выйти', exact: false})\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React from \"react\";\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from \"react\";\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n    // console.log(props)\r\n\r\n    return (\r\n        <li className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from \"react\";\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nclass AnswersList extends React.Component {\r\n\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        return (\r\n\r\n            <ul className={classes.AnswersList}>\r\n                {this.props.answers.map((answer, index) => {\r\n                    return (\r\n                        <AnswerItem\r\n                            key={index}\r\n                            answer={answer}\r\n                            onAnswerClick={this.props.onAnswerClick}\r\n                            state={this.props.state ? this.props.state[answer.id] : null}\r\n                        />\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnswersList","import React from \"react\";\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\n\r\nclass ActiveQuiz extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.ActiveQuiz}>\r\n                <p className={classes.Question}>\r\n            <span>\r\n                <strong> {this.props.answerNumber}.</strong>&nbsp;\r\n                {this.props.question}\r\n            </span>\r\n                    <small> {this.props.answerNumber} из {this.props.quizLength}</small>\r\n                </p>\r\n                <AnswersList\r\n                    state={this.props.state}\r\n                    answers={this.props.answers}\r\n                    onAnswerClick={this.props.onAnswerClick}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// const ActiveQuiz = props => (\r\n//     <div className={classes.ActiveQuiz}>\r\n//         <p className={classes.Question}>\r\n//             <span>\r\n//                 <strong> {props.answerNumber}.</strong>&nbsp;\r\n//                 {props.question}\r\n//             </span>\r\n//             <small> {props.answerNumber} из {props.quizLength}</small>\r\n//         </p>\r\n//         <AnswersList\r\n//             state={props.state}\r\n//             answers={props.answers}\r\n//             onAnswerClick={props.onAnswerClick}\r\n//         />\r\n//     </div>\r\n// )\r\nexport default ActiveQuiz","import React from \"react\";\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        'fa',\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\nexport default Button","import React from \"react\";\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FinishedQuiz = (props) => {\r\n    //Считаем количество правильных ответов\r\n    console.log('props finish' ,props.results)\r\n    const SuccessCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <h1>Finished</h1>\r\n            <ul>\r\n                {\r\n                    props.quiz.map((quizItem, index) => {\r\n                        const cls = [\r\n                            'fa',\r\n                            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                            classes[props.results[quizItem.id]]\r\n                        ]\r\n                        return (\r\n                            <li key={index}>\r\n                                <strong>{index + 1}</strong>.&nbsp;\r\n                                {quizItem.question}\r\n                                <i className={cls.join(' ')}/>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <p>Правильно {SuccessCount} из {props.quiz.length}</p>\r\n            </ul>\r\n\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n                <Link to={'/'}><Button type=\"success\">Перейти в список тестов</Button> </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react';\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => {\r\n    return (\r\n        <div className={classes.center}>\r\n            <div className={classes.Loader}>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loader","import axios from  'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-b1882.firebaseio.com/'\r\n})\r\n","import axios from '../../axios/axios-quiz'\r\nimport {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\r\n    QUIZ_SET_STATE\r\n} from \"./ActionTypes\"\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = axios.get('/quizes.json')\r\n            const quizes = []\r\n            Object.keys((await response).data).forEach((key, index) => {\r\n                //кладем в массив полученные тесты\r\n                quizes.push(\r\n                    {\r\n                        id: key,\r\n                        name: `Тест №${index + 1}`\r\n                    }\r\n                )\r\n            })\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get(`/quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch (e) {\r\n            dispatch(fetchQuizError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function fetchQuizError(e) {\r\n    return {\r\n        type: '',\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState, results\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ,\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        number\r\n    }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz\r\n\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if (state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n        //активные вопрос\r\n        const question = state.quiz[state.activeQuestion]\r\n\r\n        const results = state.results\r\n        console.log(answerId)\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            console.log(question)\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (isQuizFinished(state)) {\r\n                    dispatch(finishQuiz())\r\n                } else {\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n        } else {\r\n            results[question.id] = 'error'\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n        }\r\n    }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: QUIZ_RETRY\r\n    }\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinisheQuiz/FinishedQuiz\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\r\n\r\nclass Quiz extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.results)\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                            ? <Loader/>\r\n                            : this.props.isFinished\r\n                            ? <FinishedQuiz\r\n                                results={this.props.results}\r\n                                quiz={this.props.quiz}\r\n                                onRetry={this.props.retryQuiz}\r\n                            />\r\n                            : <ActiveQuiz\r\n                                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                question={this.props.quiz[this.props.activeQuestion].question}\r\n                                onAnswerClick={this.props.quizAnswerClick}\r\n                                quizLength={this.props.quiz.length}\r\n                                answerNumber={this.props.activeQuestion + 1}\r\n                                state={this.props.answerState}\r\n                            />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react';\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizes} from \"../../store/actions/quiz\";\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes = () => {\r\n        return this.props.quizes.map(quiz => {\r\n            return (\r\n                <li key={quiz.id}>\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}</NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    //запрашивем список тестов с сервера\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n                    {\r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                            ? <Loader/>\r\n                            : <ul>\r\n                                {this.renderQuizes()}\r\n                            </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from \"react\";\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text'\r\n    const cls = [classes.Input]\r\n    //генерируем значение htmlFor для привязки label к input\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}> {props.label}</label>\r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {\r\n                isInvalid(props)\r\n                    ? <span> {props.errorMessage || 'Введите верное значение'}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import * as axios from \"axios\";\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./ActionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email, password, returnSecureToken: true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAMFlKzBL8OT97-0nn2hQhCF45aW-hxK60'\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAMFlKzBL8OT97-0nn2hQhCF45aW-hxK60'\r\n        }\r\n\r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n        console.log(response.data)\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n\r\n        if (!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport classes from './Auth.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js'\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\";\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'password',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false)\r\n\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true)\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState(\r\n            {formControls, isFormValid})\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n        let isValid = true\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if (validation.email) {\r\n            isValid = is.email(value) && isValid\r\n        }\r\n\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                        {this.renderInputs()}\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        > Войти\r\n                        </Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        > Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n    return isFormValid\r\n}","import React from \"react\";\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = (props) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>\r\n                {props.label}\r\n            </label>\r\n            <select id={htmlFor}\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n            >\r\n                {\r\n                    props.options.map((option, index) => {\r\n                        return (\r\n                            <option value={option.value}\r\n                                    key={option.value + index}\r\n                            >\r\n                                {option.text}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\nexport default Select","export  const Auxiliary = props => props.children\r\nexport default Auxiliary","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./ActionTypes\"\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('/quizes.json', getState().create.quiz);\r\n        dispatch(resetQuizCreation)\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n            label: `Вариант ${number} `,\r\n            errorMessage: 'Значение не может быть пустым',\r\n            id: number\r\n        },\r\n        {required: true}\r\n    )\r\n}\r\n\r\nfunction createFormControl() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Значение не может быть пустым'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n    state = {\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControl()\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault()\r\n        const {question, option1, option2, option3, option4} = this.state.formControls\r\n        //шаблон вопроса\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id},\r\n            ]\r\n        }\r\n        this.props.createQuizQuestion(questionItem)\r\n\r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControl()\r\n        })\r\n    }\r\n\r\n    createQuizHandler = event => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControl()\r\n        })\r\n        this.props.finishCreateQuiz()\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n        control.touched = true\r\n        control.value = value\r\n        control.valid = validate(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = (event) => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n\r\n        })\r\n    }\r\n\r\n    //рендерим input для ввода вопроса и ответов\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n                <Auxiliary key={controlName + index}>\r\n                    <Input\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                    />\r\n                    {\r\n                        index === 0 ? <hr/> : null\r\n                    }\r\n                </Auxiliary>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //задаем переменную для отображения JSX компонента Select\r\n        const select = <Select\r\n            label=\"Выберите правильный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4},\r\n            ]}\r\n        />\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        {this.renderControls()}\r\n\r\n                        {select}\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >Добавить вопрос</Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >Создать тест</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {auth, logout} from \"../../store/actions/auth\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout)","import React from 'react';\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Quiz from \"./containers/Quiz/Quiz\";\r\nimport QuizList from \"./containers/QuizList/QuizList\";\r\nimport Auth from \"./containers/Auth/Auth\";\r\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\r\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom'\r\nimport Logout from \"./components/Logout/Logout\";\r\nimport {connect} from \"react-redux\";\r\nimport {autoLogin} from \"./store/actions/auth\";\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.autoLogin()\r\n    }\r\n\r\n    render() {\r\n\r\n        let routes = (\r\n            <Switch>\r\n                <Route path='/auth' component={Auth}/>\r\n                <Route path='/quiz/:id' component={Quiz}/>\r\n                <Route path='/' exact component={QuizList}/>\r\n                <Redirect to={'/'}/>\r\n            </Switch>\r\n        )\r\n\r\n        if (this.props.isAuthenticated) {\r\n            routes = (\r\n                <Switch>\r\n                    <Route path='/quiz-creator' component={QuizCreator}/>\r\n                    <Route path='/quiz/:id' component={Quiz}/>\r\n                    <Route path='/logout' component={Logout}/>\r\n                    <Route path='/' exact component={QuizList}/>\r\n                    <Redirect to={'/'}/>\r\n                </Switch>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Layout>\r\n                {routes}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        autoLogin: () => dispatch(autoLogin())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))","import {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FINISH_QUIZ,\r\n    QUIZ_SET_STATE,\r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY,\r\n} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, answerState: action.answerState, results: action.results\r\n            }\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state,\r\n                isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state,\r\n                answerState: null,\r\n                activeQuestion: action.number\r\n            }\r\n        case QUIZ_RETRY :\r\n            return {\r\n                ...state,\r\n                activeQuestion: 0,\r\n                answerState: null,\r\n                isFinished: false,\r\n                results: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/ActionTypes\"\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state, quiz: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from \"./create\";\r\nimport authReducer from \"./auth\";\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}