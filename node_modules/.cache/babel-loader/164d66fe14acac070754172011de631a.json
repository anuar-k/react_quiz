{"ast":null,"code":"export function createControl(config, validation) {\n  return { ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  };\n}\nexport function validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value !== '' && isValid;\n  }\n\n  return isValid;\n}\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid;\n    }\n  }\n\n  return isFormValid;\n}","map":{"version":3,"sources":["C:/js_project/react-quiz/src/form/formFramework.js"],"names":["createControl","config","validation","valid","touched","value","validate","isValid","required","validateForm","formControls","isFormValid","control","hasOwnProperty"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,UAA/B,EAA2C;AAC9C,SAAO,EACH,GAAGD,MADA;AAEHC,IAAAA,UAFG;AAGHC,IAAAA,KAAK,EAAE,CAACD,UAHL;AAIHE,IAAAA,OAAO,EAAE,KAJN;AAKHC,IAAAA,KAAK,EAAE;AALJ,GAAP;AAOH;AAED,OAAO,SAASC,QAAT,CAAkBD,KAAlB,EAAyBH,UAAU,GAAG,IAAtC,EAA4C;AAC/C,MAAI,CAACA,UAAL,EAAiB;AACb,WAAO,IAAP;AACH;;AACD,MAAIK,OAAO,GAAG,IAAd;;AAEA,MAAIL,UAAU,CAACM,QAAf,EAAyB;AACrBD,IAAAA,OAAO,GAAGF,KAAK,KAAI,EAAT,IAAeE,OAAzB;AACH;;AACD,SAAOA,OAAP;AACH;AAED,OAAO,SAASE,YAAT,CAAsBC,YAAtB,EAAoC;AACvC,MAAIC,WAAW,GAAG,IAAlB;;AAEA,OAAK,IAAIC,OAAT,IAAoBF,YAApB,EAAkC;AAC9B,QAAIA,YAAY,CAACG,cAAb,CAA4BD,OAA5B,CAAJ,EAA0C;AACtCD,MAAAA,WAAW,GAAGD,YAAY,CAACE,OAAD,CAAZ,CAAsBT,KAAtB,IAA+BQ,WAA7C;AACH;AACJ;;AACD,SAAOA,WAAP;AACH","sourcesContent":["export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n        isValid = value!== '' && isValid\r\n    }\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n    return isFormValid\r\n}"]},"metadata":{},"sourceType":"module"}