{"ast":null,"code":"var _jsxFileName = \"C:\\\\js_project\\\\react-quiz\\\\src\\\\containers\\\\QuizCreator\\\\QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Button from \"../../components/UI/Button/Button\";\nimport { createControl } from '../../form/formFramework';\nimport Input from \"../../components/UI/Input/Input\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number} `,\n    errorMessage: 'Значение не может быть пустым'\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControl() {\n  return {\n    question: createControl({\n      label: 'Вариант1',\n      errorMessage: 'Значение не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nclass QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      formControls: createFormControl()\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = () => {};\n\n    this.finishQuizHandler = () => {};\n\n    this.changeHandler = (value, controlName) => {};\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Input, {\n        label: control.label,\n        value: control.value,\n        valid: control.valid,\n        shouldValidate: !!control.validation,\n        touched: control.touched,\n        errorMessage: control.errorMessage,\n        onChange: event => this.changeHandler(event, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, this.renderControls(), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.addQuestionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"success\",\n      onClick: this.finishQuizHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"))));\n  }\n\n}\n\nexport default QuizCreator;","map":{"version":3,"sources":["C:/js_project/react-quiz/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","createControl","Input","createOptionControl","number","label","errorMessage","required","createFormControl","question","option1","option2","option3","option4","QuizCreator","state","quiz","formControls","submitHandler","event","preventDefault","addQuestionHandler","finishQuizHandler","changeHandler","value","controlName","renderControls","Object","keys","map","index","control","valid","validation","touched","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport {createControl} from '../../form/formFramework'\r\nimport Input from \"../../components/UI/Input/Input\";\r\n\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n            label: `Вариант ${number} `,\r\n            errorMessage: 'Значение не может быть пустым'\r\n        },\r\n        {required: true}\r\n    )\r\n}\r\n\r\nfunction createFormControl() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Вариант1',\r\n            errorMessage: 'Значение не может быть пустым'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n    state = {\r\n        quiz: [],\r\n        formControls: createFormControl()\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = () => {\r\n\r\n    }\r\n\r\n    finishQuizHandler = () => {\r\n\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n\r\n    }\r\n\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n                <Input\r\n                    label={control.label}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    shouldValidate={!!control.validation}\r\n                    touched={control.touched}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.changeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n                        {\r\n                            this.renderControls()\r\n                        }\r\n\r\n                        <select></select>\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                        >Добавить вопрос</Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.finishQuizHandler}\r\n                        >Создать тест</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuizCreator"]},"metadata":{},"sourceType":"module"}