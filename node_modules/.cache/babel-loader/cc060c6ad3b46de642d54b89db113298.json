{"ast":null,"code":"var _jsxFileName = \"C:\\\\js_project\\\\react-quiz\\\\src\\\\containers\\\\QuizCreator\\\\QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Button from \"../../components/UI/Button/Button\";\nimport { createControl, validate, validateForm } from '../../form/formFramework';\nimport Input from \"../../components/UI/Input/Input\";\nimport Select from \"../../components/UI/Select/Select\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number} `,\n    errorMessage: 'Значение не может быть пустым'\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControl() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Значение не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nclass QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControl()\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = event => {\n      event.preventDefault();\n      const quiz = this.state.quiz.concat();\n      const index = quiz.length + 1;\n      const questionItem = {};\n    };\n\n    this.finishQuizHandler = () => {};\n\n    this.changeHandler = (value, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.touched = true;\n      control.value = value;\n      control.valid = validate(control.value, control.validation);\n      formControls[controlName] = control;\n      this.setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n    };\n\n    this.selectChangeHandler = event => {\n      this.setState({\n        rightAnswerId: +event.target.value\n      });\n    };\n  }\n\n  //рендерим input для ввода вопроса и ответов\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Auxiliary, {\n        key: controlName + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: control.label,\n        value: control.value,\n        valid: control.valid,\n        shouldValidate: !!control.validation,\n        touched: control.touched,\n        errorMessage: control.errorMessage,\n        onChange: event => this.changeHandler(event.target.value, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }), index === 0 ? /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 39\n        }\n      }) : null);\n    });\n  }\n\n  render() {\n    //задаем переменную для отображения JSX компонента Select\n    const select = /*#__PURE__*/React.createElement(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler,\n      options: [{\n        text: 1,\n        value: 1\n      }, {\n        text: 2,\n        value: 2\n      }, {\n        text: 3,\n        value: 3\n      }, {\n        text: 4,\n        value: 4\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 24\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, this.renderControls(), select, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.addQuestionHandler,\n      disabled: !this.state.isFormValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"success\",\n      onClick: this.finishQuizHandler,\n      disabled: this.state.quiz.length === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"))));\n  }\n\n}\n\nexport default QuizCreator;","map":{"version":3,"sources":["C:/js_project/react-quiz/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","createControl","validate","validateForm","Input","Select","Auxiliary","createOptionControl","number","label","errorMessage","required","createFormControl","question","option1","option2","option3","option4","QuizCreator","state","quiz","isFormValid","rightAnswerId","formControls","submitHandler","event","preventDefault","addQuestionHandler","concat","index","length","questionItem","finishQuizHandler","changeHandler","value","controlName","control","touched","valid","validation","setState","selectChangeHandler","target","renderControls","Object","keys","map","render","select","text"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n            label: `Вариант ${number} `,\r\n            errorMessage: 'Значение не может быть пустым'\r\n        },\r\n        {required: true}\r\n    )\r\n}\r\n\r\nfunction createFormControl() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Значение не может быть пустым'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n    state = {\r\n        quiz: [],\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControl()\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault()\r\n        const quiz = this.state.quiz.concat()\r\n        const index = quiz.length + 1\r\n\r\n        const questionItem = {\r\n            \r\n        }\r\n    }\r\n\r\n    finishQuizHandler = () => {\r\n\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n        control.touched = true\r\n        control.value = value\r\n        control.valid = validate(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = (event) => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n\r\n        })\r\n    }\r\n\r\n    //рендерим input для ввода вопроса и ответов\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n                <Auxiliary key={controlName + index}>\r\n                    <Input\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                    />\r\n                    {\r\n                        index === 0 ? <hr/> : null\r\n                    }\r\n                </Auxiliary>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //задаем переменную для отображения JSX компонента Select\r\n        const select = <Select\r\n            label=\"Выберите правильный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4},\r\n            ]}\r\n        />\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        {this.renderControls()}\r\n\r\n                        {select}\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >Добавить вопрос</Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.finishQuizHandler}\r\n                            disabled={this.state.quiz.length === 0}\r\n                        >Создать тест</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuizCreator"]},"metadata":{},"sourceType":"module"}